{"name":"haproxy","version":"6.2.4","description":"Installs and configures haproxy","long_description":"# haproxy Cookbook\n\n[![Build Status](https://travis-ci.org/sous-chefs/haproxy.svg?branch=master)](https://travis-ci.org/sous-chefs/haproxy) [![Cookbook Version](https://img.shields.io/cookbook/v/haproxy.svg)](https://supermarket.chef.io/cookbooks/haproxy)\n\nInstalls and configures haproxy.\n\n## Requirements\n\n- Chef 12.20+\n\n### Platforms\n\n- Ubuntu Ubuntu 14.04+, Ubuntu 16.04\n- RHEL 6+, CentOS6+, OracleLinux6+\n- RHEL 7+, CentOS7+, OracleLinux7+\n- Debian 8+\n\n### Examples\n\nPlease check for working examples in [TEST](./test/fixtures/cookbooks/test/)\n\n## Resources\n\n### haproxy_acl\n\nAccess Control Lists creates a new ACL <aclname> or completes an existing one with new tests.\n\nThe actions generally consist in blocking a request, selecting a backend, or adding a header.\n\nIntroduced: v4.2.0\n\n#### Actions\n\n- `:create`\n\n#### Properties\n\n- `acl` -  (is: [String, Array])\n- `section` -  (is: String)\n- `section_name` -  (is: String)\n- `config_dir` -  (is: String)\n- `config_file` -  (is: String)\n\n#### Examples\n\n```\nhaproxy_acl 'gina_host hdr(host) -i foo.bar.com' do\n  section 'frontend'\n  section_name 'http'\nend\n```\n```\nhaproxy_acl 'acls for frontend:http' do\n  section 'frontend'\n  section_name 'http'\n  acl [\n    'rrhost_host hdr(host) -i dave.foo.bar.com foo.foo.com',\n    'tile_host hdr(host) -i dough.foo.bar.com',\n  ]\nend\n```\n```\nhaproxy_acl 'acls for listen' do\n  section 'listen'\n  section_name 'admin'\n  acl ['network_allowed src 127.0.0.1']\nend\n```\n### haproxy_backend\n\nBackend describes a set of servers to which the proxy will connect to forward incoming connections.\n\nIntroduced: v4.0.0\n\n#### Actions\n\n- `:create`\n\n#### Properties\n\n- `mode` -  (is: String)\n- `server` -  (is: Array)\n- `tcp_request` -  (is: Array)\n- `acl` -  (is: Array)\n- `option` -  (is: Array)\n- `extra_options` -  (is: Hash)\n- `config_dir` -  (is: String)\n- `config_file` -  (is: String)\n\n#### Examples\n\n```\nhaproxy_backend 'servers' do\n  server ['server1 127.0.0.1:8000 maxconn 32']\nend\n```\n```\nhaproxy_backend 'tiles_public' do\n  server ['tile0 10.0.0.10:80 check weight 1 maxconn 100',\n          'tile1 10.0.0.10:80 check weight 1 maxconn 100']\n  tcp_request ['content track-sc2 src',\n               'content reject if conn_rate_abuse mark_as_abuser']\n  option %w(httplog dontlognull forwardfor)\n  acl ['conn_rate_abuse sc2_conn_rate gt 3000',\n       'data_rate_abuse sc2_bytes_out_rate gt 20000000',\n       'mark_as_abuser sc1_inc_gpc0 gt 0',\n     ]\n  extra_options(\n    'stick-table' => 'type ip size 200k expire 2m store conn_rate(60s),bytes_out_rate(60s)',\n    'http-request' => 'set-header X-Public-User yes'\n  )\nend\n```\n### haproxy_config_defaults\n\nDefaults sets default parameters for all other sections following its declaration. Those default parameters are reset by the next \"defaults\" section.\n\nIntroduced: v4.0.0\n\n#### Actions\n\n- `:create`\n\n#### Properties\n\n- `timeout` -  (is: Hash)\n- `log` -  (is: String)\n- `mode` -  (is: String)\n- `balance` -  (is: )\n- `option` -  (is: Array)\n- `stats` -  (is: Hash)\n- `maxconn` -  (is: Integer)\n- `extra_options` -  (is: Hash)\n- `haproxy_retries` -  (is: Integer)\n- `config_dir` -  (is: String)\n- `config_file` -  (is: String)\n\n#### Examples\n\n```\nhaproxy_config_defaults 'defaults' do\n  mode 'http'\n  timeout connect: '5000ms',\n          client: '5000ms',\n          server: '5000ms'\n  haproxy_retries 5\nend\n```\n```\nhaproxy_config_defaults 'defaults' do\n  mode 'http'\n  timeout connect: '5s',\n          client: '50s',\n          server: '50s'\n  log 'global'\n  retries 3\nend\n```\n### haproxy_config_global\n\nParameters in the \"global\" section are process-wide and often OS-specific.\n\nThey are generally set once for all and do not need being changed once correct.\n\nIntroduced: v4.0.0\n\n#### Actions\n\n- `:create`\n\n#### Properties\n\n- `haproxy_user` -  (is: String)\n- `haproxy_group` -  (is: String)\n- `pidfile` -  (is: String)\n- `log` -  (is: [String, Array])\n- `daemon` -  (is: [TrueClass, FalseClass])\n- `debug_option` -  (is: String)\n- `stats` -  (is: Hash)\n- `maxconn` -  (is: Integer)\n- `config_cookbook` -  (is: String)\n- `chroot` -  (is: String)\n- `log_tag` -  (is: String)\n- `tuning` -  (is: Hash)\n- `extra_options` -  (is: Hash)\n- `config_dir` -  (is: String)\n- `config_file` -  (is: String)\n\n#### Examples\n\n```\nhaproxy_config_global '' do\n  chroot '/var/lib/haproxy'\n  daemon true\n  maxconn 256\n  log '/dev/log local0'\n  log_tag 'WARDEN'\n  pidfile '/var/run/haproxy.pid'\n  stats socket: '/var/lib/haproxy/stats level admin'\n  tuning 'bufsize' => '262144'\nend\n```\n```\nhaproxy_config_global 'global' do\n  daemon false\n  maxconn 4097\n  chroot '/var/lib/haproxy'\n  stats socket: '/var/lib/haproxy/haproxy.stat mode 600 level admin',\n        timeout: '2m'\nend\n```\n### haproxy_frontend\n\nFrontend describes a set of listening sockets accepting client connections.\n\nIntroduced: v4.0.0\n\n#### Actions\n\n- `:create`\n\n#### Properties\n\n- `bind` -  (is: [String, Hash])\n- `mode` -  (is: String)\n- `maxconn` -  (is: Integer)\n- `default_backend` -  (is: String)\n- `use_backend` -  (is: Array)\n- `acl` -  (is: Array)\n- `option` -  (is: Array)\n- `stats` -  (is: Hash)\n- `extra_options` -  (is: Hash)\n- `config_dir` -  (is: String)\n- `config_file` -  (is: String)\n\n#### Examples\n\n```\nhaproxy_frontend 'http-in' do\n  bind '*:80'\n  default_backend 'servers'\nend\n\nhaproxy_frontend 'tcp-in' do\n  mode 'tcp'\n  bind '*:3307'\n  default_backend 'tcp-servers'\nend\n```\n### haproxy_install\n\nInstall HAProxy from package or source.\n\nIntroduced: v4.0.0\n\n#### Actions\n\n- `:create`\n\n#### Properties\n\n- `install_type` -  (is: String)\n- `conf_template_source` -  (is: String)\n- `conf_cookbook` -  (is: String)\n- `conf_file_mode` -  (is: String)\n- `bin_prefix` -  (is: String)\n- `config_dir` -  (is: String)\n- `config_file` -  (is: String)\n- `haproxy_user` -  (is: String)\n- `haproxy_group` -  (is: String)\n- `install_only` -  (is: [true, false])\n- `service_name` -  (is: String)\n- `use_systemd` -  (is: String)\n- `package_name` -  (is: String)\n- `package_version` -  (is: [String, nil])\n- `source_version` -  (is: String)\n- `source_url` -  (is: String)\n- `source_checksum` -  (is: String)\n- `source_target_cpu` -  (is: [String, nil])\n- `source_target_arch` -  (is: [String, nil])\n- `source_target_os` -  (is: String)\n- `use_libcrypt` -  (is: String)\n- `use_pcre` -  (is: String)\n- `use_openssl` -  (is: String)\n- `use_zlib` -  (is: String)\n- `use_linux_tproxy` -  (is: String)\n- `use_linux_splice` -  (is: String)\n\n#### Examples\n\n```\nhaproxy_install 'package'\n```\n```\nhaproxy_install 'source' do\n  source_url node['haproxy']['source_url']\n  source_checksum node['haproxy']['source_checksum']\n  source_version node['haproxy']['source_version']\n  use_pcre '1'\n  use_openssl '1'\n  use_zlib '1'\n  use_linux_tproxy '1'\n  use_linux_splice '1'\nend\n```\n### haproxy_listen\n\nListen defines a complete proxy with its frontend and backend parts combined in one section.\n\nIt is generally useful for TCP-only traffic.\n\nIntroduced: v4.0.0\n\n#### Actions\n\n- `:create`\n\n#### Properties\n\n- `mode` -  (is: String)\n- `bind` -  (is: [String, Hash])\n- `maxconn` -  (is: Integer)\n- `stats` -  (is: Hash)\n- `http_request` -  (is: String)\n- `http_response` -  (is: String)\n- `default_backend` -  (is: String)\n- `use_backend` -  (is: Array)\n- `acl` -  (is: Array)\n- `extra_options` -  (is: Hash)\n- `server` -  (is: Array)\n- `config_dir` -  (is: String)\n- `config_file` -  (is: String)\n\n#### Examples\n\n```\nhaproxy_listen 'admin' do\n  bind '0.0.0.0:1337'\n  mode 'http'\n  stats uri: '/',\n        realm: 'Haproxy-Statistics',\n        auth: 'user:pwd'\n  http_request 'add-header X-Proto http'\n  http_response 'set-header Expires %[date(3600),http_date]'\n  default_backend 'servers'\n  extra_options('bind-process' => 'odd')\n  server ['admin0 10.0.0.10:80 check weight 1 maxconn 100',\n          'admin1 10.0.0.10:80 check weight 1 maxconn 100']\nend\n```\n### haproxy_resolver\n\nConfiguration related to name resolution in HAProxy. There can be as many as resolvers section as needed.\n\nEach section can contain many name servers.\n\nIntroduced: v4.5.0\n\n#### Actions\n\n- `:create`\n\n#### Properties\n\n- `nameserver` -  (is: Array)\n- `extra_options` -  (is: Hash)\n- `config_dir` -  (is: String)\n- `config_file` -  (is: String)\n\n#### Examples\n\n```\nhaproxy_resolver 'dns' do\n  nameserver ['google 8.8.8.8:53']\n  extra_options('resolve_retries' => 30,\n                'timeout' => 'retry 1s')\n  notifies :restart, 'haproxy_service[haproxy]', :delayed\nend\n```\n### haproxy_service\n\nInstalls HAProxy as a systemd or sysvinit service.\nTo reload HAProxy service add a subscribes option to the resource block. See example below.\n\nIntroduced: v4.0.0\n\n#### Actions\n\n- `:create`\n- `:start`\n- `:stop`\n- `:restart`\n- `:reload`\n- `:enable`\n\n#### Properties\n\n- `bin_prefix` -  (is: String)\n- `config_dir` -  (is: String)\n- `config_file` -  (is: String)\n- `haproxy_user` -  (is: String)\n- `haproxy_group` -  (is: String)\n- `service_name` -  (is: String)\n- `source_version` -  (is: String)\n- `use_systemd` -  (is: String)\n\n#### Examples\n\n```\nhaproxy_service 'haproxy'\n```\n```\nhaproxy_service 'haproxy' do\n  source_version node['haproxy']['source_version']\n  action :create\n  subscribes :reload, 'template[/etc/haproxy/haproxy.cfg]', :immediately\nend\n```\n### haproxy_use_backend\n\nSwitch to a specific backend if/unless an ACL-based condition is matched.\n\nIntroduced: v4.2.0\n\n#### Actions\n\n- `:create`\n\n#### Properties\n\n- `use_backend` -  (is: [String, Array])\n- `section` -  (is: String)\n- `section_name` -  (is: String)\n- `config_dir` -  (is: String)\n- `config_file` -  (is: String)\n\n#### Examples\n\n```\nhaproxy_use_backend 'gina if gina_host' do\n  section 'frontend'\n  section_name 'http'\nend\n```\n```\nhaproxy_use_backend 'use_backends for frontend:http' do\n  section 'frontend'\n  section_name 'http'\n  use_backend [\n    'rrhost if rrhost_host',\n    'tiles_public if tile_host',\n  ]\nend\n```\n### haproxy_userlist\n\nControl access to frontend/backend/listen sections or to http stats by allowing only authenticated and authorized users.\n\nIntroduced: v4.1.0\n\n#### Actions\n\n- `:create`\n\n#### Properties\n\n- `group` -  (is: Hash)\n- `user` -  (is: Hash)\n- `config_dir` -  (is: String)\n- `config_file` -  (is: String)\n\n#### Examples\n\n```\nhaproxy_userlist 'mylist' do\n  group 'G1' => 'users tiger,scott',\n        'G2' => 'users xdb,scott'\n  user  'tiger' => 'password $6$k6y3o.eP$JlKBx9za9667qe4(...)xHSwRv6J.C0/D7cV91',\n        'scott' => 'insecure-password elgato',\n        'xdb' => 'insecure-password hello'\nend\n```\n\n## License & Authors\n\n- Author:: Dan Webb (<https://github.com/damacus>)\n- Author:: Will Fisher (<https://github.com/teknofire>)\n- Author:: Richard Shade (<https://github.com/rshade>)\n- Author:: Joshua Timberman ([joshua@chef.io](mailto:joshua@chef.io))\n- Author:: Aaron Baer ([aaron@hw-ops.com](mailto:aaron@hw-ops.com))\n- Author:: Justin Kolberg ([justin@hw-ops.com](mailto:justin@hw-ops.com))\n\n```text\nCopyright:: Heavy Water Operations, LLC.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Sous Chefs","maintainer_email":"help@sous-chefs.org","license":"Apache-2.0","platforms":{"debian":">= 0.0.0","ubuntu":">= 0.0.0","centos":">= 0.0.0","redhat":">= 0.0.0","oracle":">= 0.0.0","amazon":">= 0.0.0"},"dependencies":{"cpu":">= 0.2.0","build-essential":">= 8.0.1","poise-service":">= 1.5.1"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/sous-chefs/haproxy","issues_url":"https://github.com/sous-chefs/haproxy/issues","chef_version":[[">= 12.20"]],"ohai_version":[]}